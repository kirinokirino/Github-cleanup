#include <iostream> 
// Необходимая для нахождения квадратного корня sqrt() библиотека.
#include <math.h>  
#include <clocale>

using namespace std;

// Ввод числа
double input() {
	double a;
	cin >> a;
	return a;
}

int main() {
	setlocale(LC_ALL, "rus");

	// Переменные для коэффициентов квадратного уравнения и промежуточного значения дискриминанта.
	double a, b, c, D;
	cout << "Нахождение корней квадратного уравнения ax^2+bx+c=0." << endl;

	// Ввод переменных с проверками.
	while (true) {
		cout << "Введите а: ";
		a = input();
		if (a == 0) { // По условию a != 0
			cout << "Переменная a не должна быть равна 0" << endl;
			continue; // Если проверка не пройдена, пропускает последующие действия и просит ввести а вновь.
		}
		// На b и c нет ограничений.
		cout << "Введите b: ";
		b = input();
		cout << "Введите c: ";
		c = input();

		D = b*b - 4 * a*c; // Вычисление дискриминанта, можно было использовать возведение в квадрат из библиотеки math.h.
		if (D < 0) cout << "Дискриминант не должен быть меньше нуля, нет решений." << endl;
		else break; // Если дискриминант меньше нуля, цикл повторится, иначе - ввод переменных успешно завершится.
	}

	// Вывод и вычисление.
	cout << "D = " << D << endl; // Не обязательно выводить дискриминант.
	if (D == 0) cout << "x1, x2 = " << -b / 2 * a; // Разделение на квадратные уравнения с одним или двумя корнями.
	else {
		cout << "x1 = " << (-b + sqrt(D)) / 2 * a << endl;
		cout << "x2 = " << (-b - sqrt(D)) / 2 * a << endl;
	}

	system("PAUSE");
	return 0;
}
